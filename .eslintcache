[{"G:\\around-web\\src\\index.js":"1","G:\\around-web\\src\\reportWebVitals.js":"2","G:\\around-web\\src\\components\\App.js":"3","G:\\around-web\\src\\components\\TopBar.js":"4","G:\\around-web\\src\\components\\Main.js":"5","G:\\around-web\\src\\components\\Login.js":"6","G:\\around-web\\src\\components\\Register.js":"7","G:\\around-web\\src\\components\\Home.js":"8","G:\\around-web\\src\\constants.js":"9","G:\\around-web\\src\\components\\SearchBar.js":"10","G:\\around-web\\src\\components\\PhotoGallery.js":"11","G:\\around-web\\src\\components\\CreatePostButton.js":"12","G:\\around-web\\src\\components\\PostForm.js":"13"},{"size":558,"mtime":1608785069071,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":811,"mtime":1608509325869,"results":"17","hashOfConfig":"15"},{"size":655,"mtime":1608403637405,"results":"18","hashOfConfig":"15"},{"size":1059,"mtime":1608617736581,"results":"19","hashOfConfig":"15"},{"size":2742,"mtime":1608608414568,"results":"20","hashOfConfig":"15"},{"size":3468,"mtime":1608617537692,"results":"21","hashOfConfig":"15"},{"size":4602,"mtime":1608792714448,"results":"22","hashOfConfig":"15"},{"size":312,"mtime":1608788092077,"results":"23","hashOfConfig":"15"},{"size":2106,"mtime":1608781977984,"results":"24","hashOfConfig":"15"},{"size":1087,"mtime":1608787493963,"results":"25","hashOfConfig":"15"},{"size":2626,"mtime":1608790909939,"results":"26","hashOfConfig":"15"},{"size":1701,"mtime":1608785867419,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"17ux36a",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"G:\\around-web\\src\\index.js",[],["58","59"],"G:\\around-web\\src\\reportWebVitals.js",[],"G:\\around-web\\src\\components\\App.js",[],"G:\\around-web\\src\\components\\TopBar.js",[],"G:\\around-web\\src\\components\\Main.js",[],"G:\\around-web\\src\\components\\Login.js",[],"G:\\around-web\\src\\components\\Register.js",[],"G:\\around-web\\src\\components\\Home.js",["60","61","62"],"import React, {useState, useEffect} from 'react';\r\nimport {message, Tabs, Row, Col, Button} from 'antd';\r\nimport SearchBar from \"./SearchBar\"\r\nimport PhotoGallery from \"./PhotoGallery\";\r\nimport {BASE_URL, SEARCH_KEY, TOKEN_KEY} from \"../constants\"\r\nimport * as axios from \"axios\"\r\nimport CreatePostButton from \"./CreatePostButton\"\r\nconst {TabPane} = Tabs;\r\n\r\nfunction Home(props) {\r\n  const [posts, setPost] = useState([]); // 数据存在posts下面\r\n  const [activeTab, setActiveTab] = useState(\"image\");\r\n  const [searchOption, setSearchOption] = useState({\r\n    type: SEARCH_KEY.all,\r\n    keyword: \"\"\r\n  });\r\n\r\n  function fetchPost(option) {\r\n    // collect data\r\n    const { type, keyword } = option;\r\n    let url = '';\r\n\r\n    if (type === SEARCH_KEY.all) {\r\n      url = `${BASE_URL}/search`;\r\n    } else if (type === SEARCH_KEY.user) {\r\n      url = `${BASE_URL}/search?user=${keyword}`;\r\n    } else {\r\n      url = `${BASE_URL}/search?keywords=${keyword}`;\r\n    }\r\n\r\n    // make request -- carry the token\r\n    const opt = {\r\n      method: \"GET\",\r\n      url: url,\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(TOKEN_KEY)}`\r\n      },\r\n\r\n    }\r\n\r\n    axios(opt)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          console.log(res.data);\r\n          setPost(res.data);\r\n          message.success(\"Enjoy!\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        message.error(\"Fetch posts failed!\");\r\n        console.log(\"fetch posts failed: \", err.message);\r\n      });\r\n\r\n  }\r\n\r\n  // fetch data?\r\n  useEffect(() => {\r\n    console.log('in effect', searchOption)\r\n    // do search the first time -> didMount -> search: {type: all, value: ''}\r\n    // after the first search -> didUpdate -> search: {type: keyword / user, value: value}\r\n    const { type, keyword } = searchOption;\r\n    fetchPost(searchOption); // fetchPost when: did mount, click all, click search button\r\n  }, [searchOption]); // change searchOption when: click all, or click search button\r\n\r\n  const renderPosts = (type) => {\r\n    if (!posts || posts.length === 0) {\r\n      return <div>No data!</div>;\r\n    }\r\n    if (type === \"image\") {\r\n      const imageArr = posts\r\n        .filter((item) => item.type === \"image\")\r\n        .map((image) => {\r\n          return {\r\n            src: image.url,\r\n            user: image.user,\r\n            caption: image.message,\r\n            thumbnail: image.url,\r\n            // thumbnailWidth: 300,\r\n            // thumbnailHeight: 200\r\n          };\r\n        });\r\n\r\n      return <PhotoGallery images={imageArr} />;\r\n    } else if (type === \"video\") {\r\n      // video tab下：\r\n      // 返回一个Row\r\n      // Row里面，把post中video类别的filte出来，然后映射为一个Column。\r\n      // Col要写key, 因为是重复出现的子元素，所以要给一个key，否则VirtualDOM难以识别。它们\r\n      // Video标签要给src属性、是否可控属性、类名。（设置样式）\r\n\r\n      return (\r\n        <Row gutter={32}>\r\n          {posts\r\n            .filter((post) => post.type === \"video\")\r\n            .map((post) => (\r\n              <Col span={8} key={post.url}>\r\n                <video src={post.url}\r\n                       controls={true}\r\n                       className=\"video-block\"\r\n                />\r\n                <p>\r\n                  {post.user}: {post.message}\r\n                </p>\r\n              </Col>\r\n            ))}\r\n        </Row>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSearch = (opt) => {\r\n    // trigger useEffect.\r\n    const {type, keyword} = opt;\r\n    setSearchOption({type: type, keyword: keyword});\r\n  }\r\n\r\n  const onShowPost = (tab) => {\r\n    // auto rerender after an uploading.\r\n    setActiveTab(tab);\r\n    // 注意，不要立马进行fetch Post，要等一下下。后台虽然返回200代表存储完毕，但是还是需要\r\n    setTimeout(() => {\r\n      setSearchOption(prevState=>{return prevState});\r\n    }, 1000);\r\n  }\r\n\r\n  const operations = <CreatePostButton onShowPost={onShowPost}/>;\r\n  return (\r\n    <div className=\"home\">\r\n      <SearchBar handleSearch={handleSearch}/>\r\n      <div className=\"display\">\r\n        <Tabs\r\n          onChange={(key) => setActiveTab(key)}\r\n          activeKey={activeTab}\r\n          defaultActiveKey=\"image\"\r\n          tabBarExtraContent={operations}\r\n        >\r\n          <TabPane tab=\"Image\" key=\"image\">\r\n            {renderPosts(\"image\")}\r\n          </TabPane>\r\n          <TabPane tab=\"Video\" key=\"video\">\r\n            {renderPosts(\"video\")}\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","G:\\around-web\\src\\constants.js",[],"G:\\around-web\\src\\components\\SearchBar.js",[],"G:\\around-web\\src\\components\\PhotoGallery.js",["63"],"import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Gallery from \"react-grid-gallery\";\r\n\r\nfunction PhotoGallery(props) {\r\n  const { images } = props;\r\n  const imageArray = images.map( image => {\r\n    return {\r\n      ...image,\r\n      customOverlay: (\r\n        <div className=\"gallery-caption\">\r\n          <div>\r\n            {`${image.user}: ${image.caption}`}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className=\"gallery-wrapper\">\r\n      <Gallery\r\n        images={imageArray}\r\n        enableImageSelection={false}\r\n        backdropClosesModal={true}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  PhotoGallery.propTypes = {\r\n    images: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        user: PropTypes.string.isRequired,\r\n        caption: PropTypes.string.isRequired,\r\n        src: PropTypes.string.isRequired,\r\n        thumbnail: PropTypes.string.isRequired,\r\n        thumbnailWidth: PropTypes.number.isRequired,\r\n        thumbnailHeight: PropTypes.number.isRequired\r\n      })\r\n    ).isRequired\r\n  };\r\n}\r\n\r\nexport default PhotoGallery;\r\n","G:\\around-web\\src\\components\\CreatePostButton.js",[],"G:\\around-web\\src\\components\\PostForm.js",[],["64","65"],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":34,"nodeType":"72","messageId":"73","endLine":2,"endColumn":40},{"ruleId":"70","severity":1,"message":"74","line":61,"column":13,"nodeType":"72","messageId":"73","endLine":61,"endColumn":17},{"ruleId":"70","severity":1,"message":"75","line":61,"column":19,"nodeType":"72","messageId":"73","endLine":61,"endColumn":26},{"ruleId":"76","severity":1,"message":"77","line":31,"column":3,"nodeType":"78","messageId":"79","endLine":42,"endColumn":5},{"ruleId":"66","replacedBy":"80"},{"ruleId":"68","replacedBy":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'type' is assigned a value but never used.","'keyword' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode",["82"],["83"],"no-global-assign","no-unsafe-negation"]